{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/PROJECTS/ALX-AI-Agents-Capstone-Project/frontend/src/contexts/TaskContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { taskService } from '../services/tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext(undefined);\nexport const TaskProvider = ({\n  children\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({});\n  const [selectedTask, setSelectedTask] = useState(null);\n  const {\n    isAuthenticated\n  } = useAuth();\n  const fetchTasks = React.useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await taskService.getTasks(filters);\n      setTasks(response.tasks);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch tasks');\n      console.error('Error fetching tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, filters]);\n  React.useEffect(() => {\n    fetchTasks();\n  }, [isAuthenticated, filters, fetchTasks]);\n  const createTask = async taskData => {\n    try {\n      const newTask = await taskService.createTask(taskData);\n      setTasks(prev => [newTask, ...prev]);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      throw new Error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to create task');\n    }\n  };\n  const updateTask = async (taskId, updates) => {\n    try {\n      const updatedTask = await taskService.updateTask(taskId, updates);\n      setTasks(prev => prev.map(task => task.id === taskId ? {\n        ...task,\n        ...updatedTask\n      } : task));\n      if ((selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === taskId) {\n        setSelectedTask(updatedTask);\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      throw new Error(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to update task');\n    }\n  };\n  const deleteTask = async taskId => {\n    try {\n      await taskService.deleteTask(taskId);\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      if ((selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.id) === taskId) {\n        setSelectedTask(null);\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      throw new Error(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to delete task');\n    }\n  };\n  const toggleTaskCompletion = async (taskId, completed) => {\n    try {\n      const updatedTask = await taskService.updateTask(taskId, {\n        completed\n      });\n      setTasks(prev => prev.map(task => task.id === taskId ? {\n        ...task,\n        ...updatedTask\n      } : task));\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      throw new Error(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to update task');\n    }\n  };\n  const clearError = () => setError(null);\n  const refetchTasks = async () => {\n    await fetchTasks();\n  };\n  const value = {\n    tasks,\n    loading,\n    error,\n    filters,\n    selectedTask,\n    setSelectedTask,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTaskCompletion,\n    setFilters,\n    clearError,\n    refetchTasks\n  };\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskProvider, \"DgeQUF3i+wfSoTbqDKTwU+Y485U=\", false, function () {\n  return [useAuth];\n});\n_c = TaskProvider;\nexport const useTaskContext = () => {\n  _s2();\n  const context = useContext(TaskContext);\n  if (context === undefined) {\n    throw new Error('useTaskContext must be used within a TaskProvider');\n  }\n  return context;\n};\n_s2(useTaskContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useAuth","taskService","jsxDEV","_jsxDEV","TaskContext","undefined","TaskProvider","children","_s","tasks","setTasks","loading","setLoading","error","setError","filters","setFilters","selectedTask","setSelectedTask","isAuthenticated","fetchTasks","useCallback","response","getTasks","err","_err$response","_err$response$data","data","message","console","useEffect","createTask","taskData","newTask","prev","_err$response2","_err$response2$data","Error","updateTask","taskId","updates","updatedTask","map","task","id","_err$response3","_err$response3$data","deleteTask","filter","_err$response4","_err$response4$data","toggleTaskCompletion","completed","_err$response5","_err$response5$data","clearError","refetchTasks","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTaskContext","_s2","context","$RefreshReg$"],"sources":["/home/daniel/Documents/PROJECTS/ALX-AI-Agents-Capstone-Project/frontend/src/contexts/TaskContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode, useContext } from 'react';\nimport { Task, TaskFilters } from '../types/task';\nimport { useAuth } from '../hooks/useAuth';\nimport { taskService } from '../services/tasks';\n\ninterface TaskContextType {\n  tasks: Task[];\n  loading: boolean;\n  error: string | null;\n  filters: TaskFilters;\n  selectedTask: Task | null;\n  setSelectedTask: (task: Task | null) => void;\n  createTask: (taskData: Partial<Task>) => Promise<void>;\n  updateTask: (taskId: string, updates: Partial<Task>) => Promise<void>;\n  deleteTask: (taskId: string) => Promise<void>;\n  toggleTaskCompletion: (taskId: string, completed: boolean) => Promise<void>;\n  setFilters: (filters: TaskFilters) => void;\n  clearError: () => void;\n  refetchTasks: () => Promise<void>;\n}\n\nexport const TaskContext = createContext<TaskContextType | undefined>(undefined);\n\ninterface TaskProviderProps {\n  children: ReactNode;\n}\n\nexport const TaskProvider: React.FC<TaskProviderProps> = ({ children }) => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [filters, setFilters] = useState<TaskFilters>({});\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n\n  const { isAuthenticated } = useAuth();\n\n  const fetchTasks = React.useCallback(async () => {\n    if (!isAuthenticated) return;\n\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await taskService.getTasks(filters);\n      setTasks(response.tasks);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to fetch tasks');\n      console.error('Error fetching tasks:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [isAuthenticated, filters]);\n\n  React.useEffect(() => {\n    fetchTasks();\n  }, [isAuthenticated, filters, fetchTasks]);\n\n  const createTask = async (taskData: Partial<Task>): Promise<void> => {\n    try {\n      const newTask = await taskService.createTask(taskData);\n      setTasks(prev => [newTask, ...prev]);\n    } catch (err: any) {\n      throw new Error(err.response?.data?.message || 'Failed to create task');\n    }\n  };\n\n  const updateTask = async (taskId: string, updates: Partial<Task>): Promise<void> => {\n    try {\n      const updatedTask = await taskService.updateTask(taskId, updates);\n      setTasks(prev => prev.map(task => \n        task.id === taskId ? { ...task, ...updatedTask } : task\n      ));\n      \n      if (selectedTask?.id === taskId) {\n        setSelectedTask(updatedTask);\n      }\n    } catch (err: any) {\n      throw new Error(err.response?.data?.message || 'Failed to update task');\n    }\n  };\n\n  const deleteTask = async (taskId: string): Promise<void> => {\n    try {\n      await taskService.deleteTask(taskId);\n      setTasks(prev => prev.filter(task => task.id !== taskId));\n      \n      if (selectedTask?.id === taskId) {\n        setSelectedTask(null);\n      }\n    } catch (err: any) {\n      throw new Error(err.response?.data?.message || 'Failed to delete task');\n    }\n  };\n\n  const toggleTaskCompletion = async (taskId: string, completed: boolean): Promise<void> => {\n    try {\n      const updatedTask = await taskService.updateTask(taskId, { completed });\n      setTasks(prev => prev.map(task => \n        task.id === taskId ? { ...task, ...updatedTask } : task\n      ));\n    } catch (err: any) {\n      throw new Error(err.response?.data?.message || 'Failed to update task');\n    }\n  };\n\n  const clearError = () => setError(null);\n\n  const refetchTasks = async () => {\n    await fetchTasks();\n  };\n\n  const value: TaskContextType = {\n    tasks,\n    loading,\n    error,\n    filters,\n    selectedTask,\n    setSelectedTask,\n    createTask,\n    updateTask,\n    deleteTask,\n    toggleTaskCompletion,\n    setFilters,\n    clearError,\n    refetchTasks\n  };\n\n  return (\n    <TaskContext.Provider value={value}>\n      {children}\n    </TaskContext.Provider>\n  );\n};\n\nexport const useTaskContext = () => {\n  const context = useContext(TaskContext);\n  if (context === undefined) {\n    throw new Error('useTaskContext must be used within a TaskProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}