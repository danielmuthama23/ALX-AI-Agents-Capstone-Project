{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{authService}from'../services/auth';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const initAuth=async()=>{const token=localStorage.getItem('token');if(token&&authService.isAuthenticated()){try{const userProfile=await authService.getProfile();setUser(userProfile);}catch(error){console.error('Failed to fetch user profile:',error);localStorage.removeItem('token');}}setLoading(false);};initAuth();},[]);const login=async(email,password)=>{try{const response=await authService.login({email,password});const userProfile=await authService.getProfile();setUser(userProfile);}catch(error){var _error$response,_error$response$data;throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed');}};const register=async(username,email,password)=>{try{const response=await authService.register({username,email,password});const userProfile=await authService.getProfile();setUser(userProfile);}catch(error){var _error$response2,_error$response2$data;throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Registration failed');}};const logout=async()=>{try{await authService.logout();}catch(error){console.error('Logout error:',error);}finally{setUser(null);localStorage.removeItem('token');}};const updateProfile=async updates=>{try{const updatedProfile=await authService.updateProfile(updates);setUser(updatedProfile);}catch(error){var _error$response3,_error$response3$data;throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profile update failed');}};const value={user,loading,login,register,logout,updateProfile,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","loading","setLoading","initAuth","token","localStorage","getItem","isAuthenticated","userProfile","getProfile","error","console","removeItem","login","email","password","response","_error$response","_error$response$data","Error","data","message","register","username","_error$response2","_error$response2$data","logout","updateProfile","updates","updatedProfile","_error$response3","_error$response3$data","value","Provider"],"sources":["/home/daniel/Documents/PROJECTS/ALX-AI-Agents-Capstone-Project/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from 'react';\nimport { authService } from '../services/auth';\nimport { UserProfile } from '../services/auth';\n\ninterface AuthContextType {\n  user: UserProfile | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>;\n  isAuthenticated: boolean;\n}\n\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<UserProfile | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (token && authService.isAuthenticated()) {\n        try {\n          const userProfile = await authService.getProfile();\n          setUser(userProfile);\n        } catch (error) {\n          console.error('Failed to fetch user profile:', error);\n          localStorage.removeItem('token');\n        }\n      }\n      \n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (email: string, password: string): Promise<void> => {\n    try {\n      const response = await authService.login({ email, password });\n      const userProfile = await authService.getProfile();\n      setUser(userProfile);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  };\n\n  const register = async (username: string, email: string, password: string): Promise<void> => {\n    try {\n      const response = await authService.register({ username, email, password });\n      const userProfile = await authService.getProfile();\n      setUser(userProfile);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('token');\n    }\n  };\n\n  const updateProfile = async (updates: Partial<UserProfile>): Promise<void> => {\n    try {\n      const updatedProfile = await authService.updateProfile(updates);\n      setUser(updatedProfile);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Profile update failed');\n    }\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}