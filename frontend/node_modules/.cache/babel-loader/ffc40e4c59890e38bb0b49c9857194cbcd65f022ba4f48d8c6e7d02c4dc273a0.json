{"ast":null,"code":"import api from'./api';class TaskService{async getTasks(params){const response=await api.get('/tasks',{params});return response.data;}async getTask(taskId){const response=await api.get(\"/tasks/\".concat(taskId));return response.data;}async createTask(taskData){const response=await api.post('/tasks',taskData);return response.data;}async updateTask(taskId,updates){const response=await api.put(\"/tasks/\".concat(taskId),updates);return response.data;}async deleteTask(taskId){await api.delete(\"/tasks/\".concat(taskId));}async toggleTaskCompletion(taskId,completed){const response=await api.patch(\"/tasks/\".concat(taskId,\"/toggle\"),{completed});return response.data;}async getTaskStats(){const response=await api.get('/tasks/stats/overview');return response.data;}async getDueSoonTasks(){const response=await api.get('/tasks/due-soon');return response.data;}async getOverdueTasks(){const response=await api.get('/tasks/overdue');return response.data;}async bulkUpdateTasks(taskIds,updates){const response=await api.patch('/tasks/bulk-update',{taskIds,updates});return response.data;}async exportTasks(){const response=await api.get('/tasks/export',{responseType:'blob'});return response.data;}}export const taskService=new TaskService();","map":{"version":3,"names":["api","TaskService","getTasks","params","response","get","data","getTask","taskId","concat","createTask","taskData","post","updateTask","updates","put","deleteTask","delete","toggleTaskCompletion","completed","patch","getTaskStats","getDueSoonTasks","getOverdueTasks","bulkUpdateTasks","taskIds","exportTasks","responseType","taskService"],"sources":["/home/daniel/Documents/PROJECTS/ALX-AI-Agents-Capstone-Project/frontend/src/services/tasks.ts"],"sourcesContent":["import api from './api';\nimport { Task, TaskPriority, TaskStatus, TaskFilters } from '../types/task';\n\nexport interface TasksResponse {\n  tasks: Task[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\nexport interface TaskStats {\n  total: number;\n  completed: number;\n  pending: number;\n  overdue: number;\n  dueSoon: number;\n  byPriority: Array<{ _id: string; count: number }>;\n  byCategory: Array<{ _id: string; count: number }>;\n  insights: string;\n}\n\nclass TaskService {\n  async getTasks(params?: {\n    page?: number;\n    limit?: number;\n    completed?: boolean;\n    category?: string;\n    priority?: TaskPriority;\n    search?: string;\n    sortBy?: string;\n    sortOrder?: 'asc' | 'desc';\n  }): Promise<TasksResponse> {\n    const response = await api.get<TasksResponse>('/tasks', { params });\n    return response.data;\n  }\n\n  async getTask(taskId: string): Promise<Task> {\n    const response = await api.get<Task>(`/tasks/${taskId}`);\n    return response.data;\n  }\n\n  async createTask(taskData: Partial<Task>): Promise<Task> {\n    const response = await api.post<Task>('/tasks', taskData);\n    return response.data;\n  }\n\n  async updateTask(taskId: string, updates: Partial<Task>): Promise<Task> {\n    const response = await api.put<Task>(`/tasks/${taskId}`, updates);\n    return response.data;\n  }\n\n  async deleteTask(taskId: string): Promise<void> {\n    await api.delete(`/tasks/${taskId}`);\n  }\n\n  async toggleTaskCompletion(taskId: string, completed: boolean): Promise<Task> {\n    const response = await api.patch<Task>(`/tasks/${taskId}/toggle`, { completed });\n    return response.data;\n  }\n\n  async getTaskStats(): Promise<TaskStats> {\n    const response = await api.get<TaskStats>('/tasks/stats/overview');\n    return response.data;\n  }\n\n  async getDueSoonTasks(): Promise<Task[]> {\n    const response = await api.get<Task[]>('/tasks/due-soon');\n    return response.data;\n  }\n\n  async getOverdueTasks(): Promise<Task[]> {\n    const response = await api.get<Task[]>('/tasks/overdue');\n    return response.data;\n  }\n\n  async bulkUpdateTasks(taskIds: string[], updates: Partial<Task>): Promise<{ modifiedCount: number }> {\n    const response = await api.patch<{ modifiedCount: number }>('/tasks/bulk-update', {\n      taskIds,\n      updates\n    });\n    return response.data;\n  }\n\n  async exportTasks(): Promise<Blob> {\n    const response = await api.get('/tasks/export', {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n}\n\nexport const taskService = new TaskService();"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAwBvB,KAAM,CAAAC,WAAY,CAChB,KAAM,CAAAC,QAAQA,CAACC,MASd,CAA0B,CACzB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAgB,QAAQ,CAAE,CAAEF,MAAO,CAAC,CAAC,CACnE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAC,OAAOA,CAACC,MAAc,CAAiB,CAC3C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,WAAAI,MAAA,CAAiBD,MAAM,CAAE,CAAC,CACxD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAI,UAAUA,CAACC,QAAuB,CAAiB,CACvD,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACY,IAAI,CAAO,QAAQ,CAAED,QAAQ,CAAC,CACzD,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAO,UAAUA,CAACL,MAAc,CAAEM,OAAsB,CAAiB,CACtE,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACe,GAAG,WAAAN,MAAA,CAAiBD,MAAM,EAAIM,OAAO,CAAC,CACjE,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAU,UAAUA,CAACR,MAAc,CAAiB,CAC9C,KAAM,CAAAR,GAAG,CAACiB,MAAM,WAAAR,MAAA,CAAWD,MAAM,CAAE,CAAC,CACtC,CAEA,KAAM,CAAAU,oBAAoBA,CAACV,MAAc,CAAEW,SAAkB,CAAiB,CAC5E,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACoB,KAAK,WAAAX,MAAA,CAAiBD,MAAM,YAAW,CAAEW,SAAU,CAAC,CAAC,CAChF,MAAO,CAAAf,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAe,YAAYA,CAAA,CAAuB,CACvC,KAAM,CAAAjB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAY,uBAAuB,CAAC,CAClE,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAgB,eAAeA,CAAA,CAAoB,CACvC,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAS,iBAAiB,CAAC,CACzD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAiB,eAAeA,CAAA,CAAoB,CACvC,KAAM,CAAAnB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAS,gBAAgB,CAAC,CACxD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAkB,eAAeA,CAACC,OAAiB,CAAEX,OAAsB,CAAsC,CACnG,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACoB,KAAK,CAA4B,oBAAoB,CAAE,CAChFK,OAAO,CACPX,OACF,CAAC,CAAC,CACF,MAAO,CAAAV,QAAQ,CAACE,IAAI,CACtB,CAEA,KAAM,CAAAoB,WAAWA,CAAA,CAAkB,CACjC,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,eAAe,CAAE,CAC9CsB,YAAY,CAAE,MAChB,CAAC,CAAC,CACF,MAAO,CAAAvB,QAAQ,CAACE,IAAI,CACtB,CACF,CAEA,MAAO,MAAM,CAAAsB,WAAW,CAAG,GAAI,CAAA3B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}